说明：
由于核心算法中涉及摄像头固定高度、最低清晰度要求等，车道线检测算法的ROI（图像感兴趣区域）也与固定摄像头的拍摄范围有关，只符合测试视频中情况。因此对于非测试视频无法取得很好检测效果（测试用的信号灯图片即为此情况，因此建议使用信号灯图片测试时，不勾选检测车道线）。
考虑到本团队整个项目的系统部署涉及摄像头、中心服务器、app等，较为复杂，可能无法很好进行直接使用，故提供了电脑端demo作为替代进行运行演示。但由于使用pyinstaller打包成exe时出现部分dll缺失问题，无法提供直接的exe文件，而需要使用命令行运行程序，深表抱歉。

配置&运行方式：
操作系统：Windows 10 或 Linux
运行环境：python   版本号：Python 3.7.2
所涉及到的python库：
1、numpy
2、math
3、sys
4、threading
5、tkinter
6、cv2	(如用pip安装，命令为pip install opencv-python)
7、pyttsx3
8、qtawesome
9、PyQt5
10、matplotlib
11、dlib
一般来说，6-11所列出的库需要自行安装，通过pip install 相应库名，即可完成安装。
配置后，请在文件目录下打开cmd，通过python main.py运行demo程序。

测试数据：
测试用的视频数据为project_video和challenge_video，位于test_video文件夹中，请通过运行程序中的数据源-本地视频，再点击开始来进行选择。
测试用的图片位于test_img文件夹中，相关测试说明见上述说明所述，请通过运行程序中的数据源-本地图片，再点击开始来进行选择。